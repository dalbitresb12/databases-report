name: Build and release document

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: 'Version to use for this run'

jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          working_directory: src/
          root_file: main.tex
      - name: Get version name
        id: get_version
        env:
          EVENT_NAME: ${{ github.event_name }}
          TAG_INPUT: ${{ github.event.inputs.version }}
        run: |
          if [[ "$EVENT_NAME" == "workflow_dispatch" ]]
          then
            TAG_NAME=$TAG_INPUT
          else
            TAG_NAME=${GITHUB_REF/refs\/tags\//}
          fi
          
          echo ::set-output name=version::$TAG_NAME
      - name: Prepare release archive
        run: |
          mkdir -p ${{ github.workspace }}/out
          mv ${{ github.workspace }}/src/main.pdf ${{ github.workspace }}/out/reporte-coursera.pdf
          cp -r ${{ github.workspace }}/sql ${{ github.workspace }}/exports/* ${{ github.workspace }}/out
      - name: Create release archive
        uses: TheDoctor0/zip-release@0.6.0
        with:
          type: 'zip'
          directory: ${{ github.workspace }}/out
          filename: coursera-${{ steps.get_version.outputs.version }}.zip
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: coursera-${{ steps.get_version.outputs.version }}
          path: out/coursera-${{ steps.get_version.outputs.version }}.zip
      - name: Create release and upload artifact
        uses: softprops/action-gh-release@v1
        if: github.event_name != 'workflow_dispatch' && startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: out/coursera-${{ steps.get_version.outputs.version }}.zip
          draft: true
